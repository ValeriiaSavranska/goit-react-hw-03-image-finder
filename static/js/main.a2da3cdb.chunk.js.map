{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/App/App.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.jsx","services/api.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/App/App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","SearchBar","state","searchImgName","page","handelChange","event","setState","currentTarget","value","toLowerCase","handelSubmit","preventDefault","trim","props","onSubmit","className","styles","Searchbar","SearchForm","this","type","SearchFormButton","style","width","height","paddingTop","SearchFormInput","name","onChange","autoComplete","autoFocus","placeholder","Component","BASE_URL","searchParams","URLSearchParams","key","image_type","orientation","per_page","api","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","webformatURL","largeImageURL","text","onClick","src","alt","modalRootRef","document","querySelector","Modal","onEscPress","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","modal","largeImg","loaderStyle","position","left","top","transform","ImageGallery","searchImages","error","loading","isModalOpen","getLargeImg","getImagesFromApi","preveState","hits","scrollTo","body","scrollHeight","behavior","catch","finally","prevProps","prevState","prevImgName","prevPage","nextImgName","nextPage","message","color","timeout","map","hit","tags","id","length","children","Button","App","handelFormSubmit","onLoadMore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a2da3cdb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__ecl0x\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3FaGv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1XsBv\",\"Modal\":\"Modal_Modal__-BtfX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2X7aj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__16Rgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__20SaJ\"};","import styles from './Searchbar.module.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\n\nclass SearchBar extends Component {\n  state = {\n    searchImgName: '',\n    page: 1,\n  };\n\n  handelChange = event => {\n    this.setState({ searchImgName: event.currentTarget.value.toLowerCase() });\n  };\n\n  handelSubmit = event => {\n    event.preventDefault();\n    if (this.state.searchImgName.trim() === '') return;\n\n    this.props.onSubmit(this.state.searchImgName, this.state.page);\n    this.setState({ searchImgName: '', page: 1 });\n  };\n\n  render() {\n    return (\n      <header className={styles.Searchbar}>\n        <form className={styles.SearchForm} onSubmit={this.handelSubmit}>\n          <button type=\"submit\" className={styles.SearchFormButton}>\n            <ImSearch\n              style={{ width: '25px', height: '30px', paddingTop: '3px' }}\n            />\n          </button>\n\n          <input\n            className={styles.SearchFormInput}\n            name=\"searchImgName\"\n            value={this.state.searchImgName}\n            onChange={this.handelChange}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  searchImgName: PropTypes.string,\n  page: PropTypes.number,\n};\n\nexport default SearchBar;\n","const BASE_URL = 'https://pixabay.com/api/';\n\nconst searchParams = new URLSearchParams({\n  key: '24464627-f47c997de86c962dcc3f2ff0b',\n  image_type: 'photo',\n  orientation: 'horizontal',\n  per_page: 12,\n});\n\n//https://pixabay.com/api/?q=cat&page=1&key=your_key&image_type=photo&orientation=horizontal&per_page=12\n\nconst api = (searchImgName, page = 1) =>\n  fetch(`${BASE_URL}?q=${searchImgName}&page=${page}&${searchParams}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong try again'));\n    },\n  );\n\nexport default api;\n","import styles from './ImageGalleryItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, text, onClick }) => (\n  <li className={styles.ImageGalleryItem}>\n    <img\n      src={webformatURL}\n      alt={text}\n      className={styles.ImageGalleryItem}\n      onClick={() => onClick(largeImageURL)}\n    />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string,\n  largeImageURL: PropTypes.string,\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import styles from './Modal.module.css';\nimport { createPortal } from 'react-dom';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst modalRootRef = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.onEscPress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onEscPress);\n  }\n\n  onEscPress = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={styles.Overlay} onClick={this.handleBackdropClick}>\n        <div className={styles.modal}>\n          <img src={this.props.largeImg} alt=\"\" />\n        </div>\n      </div>,\n      modalRootRef,\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n  largeImg: PropTypes.string,\n};\n\nexport default Modal;\n","import styles from './ImageGallery.module.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport api from '../../services/api';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport Modal from '../Modal/Modal.jsx';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst loaderStyle = {\n  position: 'fixed',\n  left: '50%',\n  top: '50%',\n  transform: 'translate(-50%, -50%)',\n};\n\nclass ImageGallery extends Component {\n  state = {\n    searchImages: null,\n    error: null,\n    loading: false,\n    isModalOpen: false,\n    largeImg: null,\n  };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    this.getImagesFromApi(this.props.searchImgName);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevImgName = prevProps.searchImgName;\n    const prevPage = prevProps.page;\n    const nextImgName = this.props.searchImgName;\n    const nextPage = this.props.page;\n\n    if (prevImgName !== nextImgName) {\n      this.setState({ searchImages: null });\n    }\n\n    if (prevImgName !== nextImgName || prevPage !== nextPage) {\n      this.setState({ loading: true });\n      this.getImagesFromApi(nextImgName, nextPage);\n    }\n  }\n\n  onClose = () => {\n    this.setState({ isModalOpen: false });\n  };\n\n  getLargeImg = largeImg => {\n    this.setState({ largeImg, isModalOpen: true });\n  };\n\n  getImagesFromApi = (searchImgName, page) => {\n    api(searchImgName, page)\n      .then(searchImages => {\n        this.setState(preveState => {\n          if (preveState.searchImages === null) {\n            return { searchImages: [...searchImages.hits] };\n          }\n          return {\n            searchImages: [...preveState.searchImages, ...searchImages.hits],\n          };\n        });\n\n        window.scrollTo({\n          top: document.body.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  render() {\n    const { searchImages, loading, error, isModalOpen, largeImg } = this.state;\n    return (\n      <>\n        {error && <p>{error.message}</p>}\n        {loading && (\n          <Loader\n            type=\"Hearts\"\n            color=\"#3F51B5\"\n            height={250}\n            width={250}\n            style={{ ...loaderStyle }}\n            timeout={3000}\n          />\n        )}\n        <ul className={styles.ImageGallery}>\n          {searchImages &&\n            searchImages.map(hit => (\n              <ImageGalleryItem\n                key={hit.id}\n                webformatURL={hit.webformatURL}\n                largeImageURL={hit.largeImageURL}\n                text={hit.tags}\n                onClick={this.getLargeImg}\n              />\n            ))}\n        </ul>\n        {isModalOpen && <Modal onClose={this.onClose} largeImg={largeImg} />}\n        {searchImages && searchImages.length > 11 && this.props.children}\n      </>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ImageGallery;\n","import styles from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => (\n  <button type=\"button\" onClick={() => onClick()} className={styles.Button}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import styles from './App.module.css';\nimport SearchBar from '../Searchbar/Searchbar.jsx';\nimport ImageGallery from '../ImageGallery/ImageGallery.jsx';\nimport Button from '../Button/Button.jsx';\n\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    searchImgName: '',\n    page: 1,\n  };\n\n  handelFormSubmit = (searchImgName, page) => {\n    this.setState({ searchImgName, page });\n  };\n\n  onLoadMore = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  render() {\n    return (\n      <div className={styles.App}>\n        <SearchBar onSubmit={this.handelFormSubmit} />\n        {this.state.searchImgName && (\n          <ImageGallery\n            searchImgName={this.state.searchImgName}\n            page={this.state.page}\n          >\n            <Button onClick={this.onLoadMore} />\n          </ImageGallery>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__29Tqa\",\"SearchForm\":\"Searchbar_SearchForm__1PsyT\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1QzSR\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__lii0B\",\"SearchFormInput\":\"Searchbar_SearchFormInput__28S6y\"};"],"sourceRoot":""}